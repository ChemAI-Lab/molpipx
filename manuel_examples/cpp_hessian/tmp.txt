
int enzyme_dup;
int enzyme_const;
double __enzyme_autodiff(void *, int, const vd &, vd &, int, double &,
                         double &);
double __enzyme_fwddiff(void*,int, const vd &, vd &);

// hessian
// clang-format off
void __enzyme_fwddiff2(void *, 
                      int, const vd &, vd &, 
                      int, vd &, vd &, 
                      int, double &, double &,
                      int, double &, double &);
// clang-format on

// nice wrappers jacobians
void jac_rev(const vd &x, vd &bx, double &y, double &by) {
  __enzyme_autodiff((void *)f_energy, enzyme_dup, x, bx, enzyme_dup, y, by);
}

void hess_fwdfwd(const vd &x, vd &dd_x) {
  assert(x.size() * x.size() == dd_x.size());
  for (size_t i = 0; i < x.size(); i++) {
    vd bx(x.size(), 0.0);
    vd dx(x.size(), 0.0);
    vd dbx(x.size(), 0.0);

    dx[i] = 1.0;

    double y = 0.0;
    double by = 1.0;
    double dy = 0.0;
    double dby = 0.0;

    __enzyme_fwddiff2((void *)jac_rev, enzyme_dup, x, dx, enzyme_dup, bx, dbx,
                      enzyme_dup, y, dy, enzyme_dup, by, dby);
    for (size_t j = 0; j < x.size(); j++) {
      dd_x[i * x.size() + j] = dbx[j];
    }
  }
}

